<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdkj.dispatch.dao.orderFeeItem.OrderFeeItemMapper">
  <resultMap id="BaseResultMap" type="com.sdkj.dispatch.domain.po.OrderFeeItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="fee_name" jdbcType="VARCHAR" property="feeName" />
    <result column="fee_amount" jdbcType="REAL" property="feeAmount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_method" jdbcType="INTEGER" property="payMethod" />
    <result column="pay_serial_num" jdbcType="VARCHAR" property="paySerialNum" />
    <result column="pay_time" jdbcType="VARCHAR" property="payTime" />
    <result column="fee_type" property="feeType" />
    <result column="driver_id"  property="driverId" />
    <result column="driver_fee"  property="driverFee" />
    <result column="client_referee_id"  property="clientRefereeId" />
    <result column="client_referee_fee"  property="clientRefereeFee" />
    <result column="driver_referee_id"  property="driverRefereeId" />
    <result column="driver_referee_fee" property="driverRefereeFee" />
    <result column="plat_form_fee"  property="platFormFee" />
  </resultMap>
 
 
  <select id="findSingleOrderFeeItem" parameterType="java.util.Map" resultMap="BaseResultMap">
    select *
    from sdlh_order_fee_item
    <trim prefix="where" prefixOverrides="and">
    	<if test="id != null"> and id = #{id}</if>
    </trim>
  </select>	
  	
  <select id="findOrderFeeItemList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select *
    from sdlh_order_fee_item
    <trim prefix="where" prefixOverrides="and">
    	<if test="orderId != null"> and order_id = #{orderId}</if>
    	<if test="status != null "> and status = #{status}</if>
    	<if test="idList !=null">
    		and id in
    		<foreach collection="idList" open="(" close=")" item="id" separator=",">
    			#{id}
    		</foreach>
    	</if>
    </trim>
  </select>
  
  <select id="findOrderFeeDistribute" parameterType="java.util.Map" resultType="java.util.Map">
    select order_id as orderId,driver_id as driverId,sum(driver_fee) as driverFee,
    client_referee_id as clientRefereeId,sum(client_referee_fee) as clientRefereeFee,
    driver_referee_id as driverRefereeId,sum(driver_referee_fee) as driverRefereeFee,
    1 as platFormId,sum(plat_form_fee) as platFormFee
    from sdlh_order_fee_item
    <trim prefix="where" prefixOverrides="and">
    	<if test="orderId != null"> and order_id = #{orderId}</if>
    	<if test="status != null "> and status = #{status}</if>
    </trim>
    group by order_id
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sdlh_order_fee_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sdkj.dispatch.domain.po.OrderFeeItem" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into sdlh_order_fee_item (id, order_id, fee_name,fee_amount, status, pay_method, 
      pay_serial_num, pay_time,fee_type,driver_id,driver_fee,client_referee_id,client_referee_fee,driver_referee_id,driver_referee_fee,plat_form_fee)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{feeName,jdbcType=VARCHAR}, 
      #{feeAmount,jdbcType=REAL}, #{status,jdbcType=INTEGER}, #{payMethod,jdbcType=INTEGER}, 
      #{paySerialNum,jdbcType=VARCHAR}, #{payTime,jdbcType=VARCHAR},#{feeType},#{driverId},#{driverFee},#{clientRefereeId},#{clientRefereeFee},#{driverRefereeId},#{driverRefereeFee},#{platFormFee})
  </insert>
   
  <update id="updateByPrimaryKey" parameterType="com.sdkj.dispatch.domain.po.OrderFeeItem">
    update sdlh_order_fee_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="feeName != null">
        fee_name = #{feeName,jdbcType=VARCHAR},
      </if>
      <if test="feeAmount != null">
        fee_amount = #{feeAmount,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null">
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="paySerialNum != null">
        pay_serial_num = #{paySerialNum,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId},
      </if>
      <if test="driverRefereeId != null">
        driver_referee_id = #{driverRefereeId},
      </if>
      <if test="driverRefereeFee != null">
        driver_referee_fee = #{driverRefereeFee},
      </if>
      <if test="platFormFee != null">
        plat_form_fee = #{platFormFee},
      </if>
      <if test="clientRefereeFee != null">
        client_referee_fee = #{clientRefereeFee},
      </if>
      <if test="clientRefereeId != null">
        client_referee_id = #{clientRefereeId},
      </if>
      <if test="clientRefereeId != null">
        client_referee_id = #{clientRefereeId},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>